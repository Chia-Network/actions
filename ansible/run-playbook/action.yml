name: "Ansible Playbook"
description: "Runs an ansible playbook"
inputs:
  ansible_dir:
    description: "Path to ansible directory"
    required: true
  playbook_file:
    description: "Playbook file name"
    required: true
  inventory_file:
    description: "Inventory file name"
    required: true
  remote_user:
    description: "remote user for ssh connection"
    required: false
  private_key_file:
    description: "Private key to use for remote ssh sessino"
    required: false
    default: "~/.ssh/id_rsa"
  extra_vars_file:
    description: "Provides a file to pass to ansible with extra variables defined. Typically use group vars instead of this"
    default: "extravars.json"
    required: false
  ansible_galaxy_roles:
    description: "Ansible galaxy roles to install. Space separated list of roles."
    default: ""
    required: false
  ansible_galaxy_collections:
    description: "Ansible galaxy collections to install. Space separate list of collections"
    default: ""
    required: false
  limit_hosts:
    description: "Optional set of hosts to limit the ansible run to. See --limit in ansible docs"
    default: "*"
    required: false
runs:
  using: "composite"
  steps:
    # jmespath is used for json filtering in playbooks/roles, similar to jq
    - name: Install dependencies
      run: |
        ( command -v apk && apk add ansible rsync openssh-client py3-jmespath ) || true
        ( command -v apt-get && apt-get update && apt-get install -y ansible rsync openssh-client python3-jmespath ) || true
      shell: sh
    - name: Install ansible galaxy deps
      run: |
        if [ ! -z "${{ inputs.ansible_galaxy_collections }}" ]
        then
          ansible-galaxy collection install ${{ inputs.ansible_galaxy_collections }}
        fi
      shell: sh
    - name: Install ansible galaxy roles
      run: |
        if [ ! -z "${{ inputs.ansible_galaxy_roles }}" ]
        then
          ansible-galaxy role install ${{ inputs.ansible_galaxy_roles }}
        fi
      shell: sh
    - name: Run playbook
      working-directory: ${{ inputs.ansible_dir }}
      run: |
        echo "Using extra vars file: ${{ inputs.extra_vars_file }}"

        # Ensure the extra var file exists, in case we're not using it upstream
        if [ ! -f "${{ inputs.extra_vars_file }}" ]
        then
            echo "{}" > ${{ inputs.extra_vars_file }}
        fi

        echo "Contents of extra vars file:"
        cat ${{ inputs.extra_vars_file }}

        USER_FLAG=""
        if [ ! -z "${{ inputs.remote_user }}" ]; then
          USER_FLAG="-u ${{ inputs.remote_user }}"
        fi

        ANSIBLE_HOST_KEY_CHECKING=False \
          ansible-playbook $USER_FLAG -i ${{ inputs.inventory_file }} --private-key ${{ inputs.private_key_file }} \
          ${{ inputs.playbook_file }}  --extra-vars "@${{ inputs.extra_vars_file }}" --limit "${{ inputs.limit_hosts }}"
      shell: sh

