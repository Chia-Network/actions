name: ðŸš¨ Check dependabot config

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

concurrency:
  # SHA is added to the end if on `main` to let all main workflows run
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/long_lived/')) && github.sha || '' }}
  cancel-in-progress: true

jobs:
  check-dependabot-config:
    name: Check dependabot config
    runs-on: [ubuntu-latest]
    timeout-minutes: 5

    steps:
      - uses: Chia-Network/actions/git-mark-workspace-safe@main

      - name: Test for secrets access
        id: check_secrets
        shell: bash
        run: |
          unset HAS_SECRET

          if [ -n "$REPO_COMMIT" ]; then HAS_SECRET='true' ; fi
          echo HAS_SECRET=${HAS_SECRET} >> "$GITHUB_OUTPUT"
        env:
          REPO_COMMIT: "${{ secrets.REPO_COMMIT }}"

      - name: Set token based on HAS_SECRET
        run: echo "TOKEN=$([[ '${{ env.HAS_SECRET }}' == 'true' ]] && echo '${{ secrets.REPO_COMMIT }}' || echo '${{ github.token }}')" >> "$GITHUB_ENV"

      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          token: ${{ env.TOKEN }}

      - uses: Chia-Network/actions/commit-sign/gpg@main
        if: steps.check_secrets.outputs.HAS_SECRET
        with:
          gpg_private_key: ${{ secrets.CHIA_AUTOMATION_PRIVATE_GPG_KEY }}
          passphrase: ${{ secrets.CHIA_AUTOMATION_PRIVATE_GPG_PASSPHRASE }}

      - name: Check dependabot config generation is up to date
        run: |
          ./update-dependabot-config.sh

      - name: Commit any changes back to the repo
        if: always() && steps.check_secrets.outputs.HAS_SECRET
        env:
          BRANCH: ${{ github.head_ref }}
        run: |
          ( git fetch origin && git switch -c "$BRANCH" "origin/$BRANCH" && git commit -am "Updating dependabot configuration" && git push origin "$BRANCH" ) || true
