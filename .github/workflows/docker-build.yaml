name: Build Docker Image

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        default: "ubuntu-latest"
      timeout-minutes:
        required: false
        type: number
        default: 360
      docker-platforms:
        required: false
        type: string
        default: "linux/amd64,linux/arm64"
      docker-context:
        required: false
        type: string
        default: .
      dockerfile:
        required: false
        type: string
        default: "./Dockerfile"
      image_subpath:
        required: false
        type: string
      dockerhub_imagename:
        required: false
        type: string
        default: ""
      build-args:
        required: false
        type: string
        default: ""
      additional-tag:
        required: false
        type: string
        default: ""
      alternate-latest-mode:
        required: false
        type: boolean
        default: false
      push:
        required: false
        type: boolean
        default: true
        description: "Whether or not to attempt to push the image to the registry"
      artifacts-name:
        required: false
        type: string
        description: "Whether artifacts should be downloaded before building the image"
      artifacts-path:
        required: false
        type: string
        description: "Path to place artifacts, if downloading"
      enable-cache:
        required: false
        type: string
        default: "false"
        description: Should the builds use docker cache
    secrets:
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_PAT:
        required: false

jobs:
  package:
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to DockerHub
        env:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_pat: ${{ secrets.DOCKERHUB_PAT }}
        if: ${{ env.dockerhub_username != '' && env.dockerhub_pat != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.dockerhub_username }}
          password: ${{ env.dockerhub_pat }}

      - name: Set image name
        id: image
        run: |
          export subpath="${{ inputs.image_subpath }}"
          if [ "$subpath" == '' ]; then
            echo "imagename=ghcr.io/${{ github.repository }}" >> "$GITHUB_OUTPUT"
          else
            echo "imagename=ghcr.io/${{ github.repository }}/${subpath}" >> "$GITHUB_OUTPUT"
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.image.outputs.imagename }}
            ${{ inputs.dockerhub_imagename }}
          flavor: |
            latest=auto
            prefix=
            suffix=
          tags: |
            type=raw,value=main,enable={{is_default_branch}}
            type=raw,value=latest,enable=${{ inputs.alternate-latest-mode && endsWith(github.ref, github.event.repository.default_branch) }}
            type=raw,value=${{ inputs.additional-tag }},enable=${{ inputs.additional-tag != '' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=long

      - name: Download artifacts if set
        if: ${{ inputs.artifacts-name != '' && inputs.artifacts-path != '' }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifacts-name }}
          path: ${{ inputs.artifacts-path }}

      - name: Cache
        if: ${{ inputs.enable-cache == 'true' }}
        uses: actions/cache@v4
        with:
          path: docker-cache
          key: ${{ runner.os }}-docker-cache

      - name: Build Docker Container
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.docker-context }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ inputs.docker-platforms }}
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          build-args: ${{ inputs.build-args }}
          cache-from: type=local,src=docker-cache
          cache-to: type=local,dest=docker-cache-new

      - # Fixes
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        if: ${{ inputs.enable-cache == 'true' }}
        run: |
          rm -rf docker-cache
          mv docker-cache-new docker-cache
