name: "Activate virtual environment"
description: 'Activate the a virtual environment for future steps.'
inputs:
  directories:
    description: "A list of directories to attempt to activate, terminates on the first present directory.  Uses JSON format."
    required: true
    default: '["venv/", ".venv/"]'
#outputs:
#  virtual-env:
#    description: "The VIRTUAL_ENV environment value."
#    value:
#  virtual-env-bin:
#    description: "The path to the virtual environment directory containing the executables."
#    value:
runs:
  using: "composite"
  steps:
    - name: Activate virtual environment (macOS, Ubuntu)
      if: runner.os == 'macos' || runner.os == 'linux'
      shell: sh
      run: |
        for venv in $(echo '${{ inputs.directories }}' | jq -c -r '.[]')
        do
          if [ -d "${venv}" ]
          then
            . "${venv}/bin/activate"
            echo "$(cd "${venv}/bin/"; pwd)" >> $GITHUB_PATH
            echo "VIRTUAL_ENV=${VIRTUAL_ENV}" >> $GITHUB_ENV
            exit 0
          else
            echo "No environment found at: ${venv}"
          fi
        done

        echo "No environment found" 1>&2
        exit 1
    - name: Activate virtual environment (Windows)
      if: runner.os == 'windows'
      shell: pwsh
      run: |
        foreach ($venv in (echo '${{ inputs.directories }}' | jq -c  -r '.[]'))
        {
          if (Test-Path -PathType Container "$venv") {
            "$venv/Scripts/activate"
            (Resolve-Path "$venv/Scripts/").Path >> $Env:GITHUB_PATH
            Write-Output "VIRTUAL_ENV=$Env:VIRTUAL_ENV" >> $Env:GITHUB_ENV
            exit 0
          } else {
            Write-Output "No environment found at: $venv"
          }
        }

        Write-Error "No environment found"
        exit 1
