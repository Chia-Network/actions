name: "Windows Code Sign"
description: "Signs the specified file with signtool and digicert HSM"
inputs:
  sm_tools_download_url:
    description: "URL to download smtools-windows-x64.msi from. If set in env SM_TOOLS_DOWNLOAD_URL, env wins"
    default: "https://one.digicert.com/signingmanager/api-ui/v1/releases/smtools-windows-x64.msi/download"
    required: false
  sm_host:
    description: "Digicert signing host"
    default: "https://clientauth.one.digicert.com"
    required: false
  sm_api_key:
    description: "API Key for digicert"
    required: true
  sm_client_cert_file_b64:
    description: "Base64 of client cert file"
    required: true
  sm_client_cert_password:
    description: "Password for client cert"
    required: true
  sm_code_signing_cert_sha1_hash:
    description: "fingerprint of the cert in the HSM to use for signing"
    required: true
  sign:
    description: "Whether to actually sign the file or just install the tools. Defaults so installing + signing"
    required: false
    default: "true"
  file:
    description: "Path to the file to sign"
    required: false
runs:
  using: "composite"
  steps:
    - name: Setup Certificate
      shell: bash
      run: |
        echo "${{ inputs.sm_client_cert_file_b64 }}" | base64 --decode > /d/Certificate_pkcs12.p12

    - name: Set signing variables
      shell: bash
      run: |
        if [[ -z $SM_TOOLS_DOWNLOAD_URL ]]; then
          echo "SM_TOOLS_DOWNLOAD_URL=${{ inputs.sm_tools_download_url }}" >> "$GITHUB_ENV"
        fi
        echo "SM_HOST=${{ inputs.sm_host }}" >> "$GITHUB_ENV"
        echo "SM_API_KEY=${{ inputs.sm_api_key }}" >> "$GITHUB_ENV"
        echo "SM_CLIENT_CERT_FILE=D:\\Certificate_pkcs12.p12" >> "$GITHUB_ENV"
        echo "SM_CLIENT_CERT_PASSWORD=${{ inputs.sm_client_cert_password }}" >> "$GITHUB_ENV"
        echo "SM_CODE_SIGNING_CERT_SHA1_HASH=${{ inputs.sm_code_signing_cert_sha1_hash }}" >> "$GITHUB_ENV"
        echo "C:\Program Files (x86)\Windows Kits\10\App Certification Kit" >> $GITHUB_PATH
        echo "C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools" >> $GITHUB_PATH
        echo "C:\Program Files\DigiCert\DigiCert One Signing Manager Tools" >> $GITHUB_PATH

    - name: Setup SSM KSP
      shell: cmd
      run: |
        curl -X GET "%SM_TOOLS_DOWNLOAD_URL%" -H "x-api-key:%SM_API_KEY%" -o smtools-windows-x64.msi
        msiexec /i smtools-windows-x64.msi /quiet /qn
        smksp_registrar.exe list
        smctl.exe keypair ls
        C:\Windows\System32\certutil.exe -csp "DigiCert Signing Manager KSP" -key -user
        smksp_cert_sync.exe

    - name: Sign file
      if: ${{ inputs.sign == 'true' }}
      shell: pwsh
      run: |
        signtool.exe sign /sha1 $env:SM_CODE_SIGNING_CERT_SHA1_HASH /tr http://timestamp.digicert.com /td SHA256 /fd SHA256 "${{ inputs.file }}"

    - name: Validate signature
      if: ${{ inputs.sign == 'true' }}
      shell: pwsh
      run: |
        signtool.exe verify /v /pa "${{ inputs.file }}"
